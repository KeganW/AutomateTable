' Author: Kegan Wong
'----------------------------------------------------------------------------------------------------------------------------------
' Email: kmw037@ucsd.edu
'----------------------------------------------------------------------------------------------------------------------------------
' Description: Automates creating three 59x3 tables,and populates each table cell with pictures of lab results in ascending order.
'              Each table contains separate tests (test 3, test 4, test 5) based on temperature. For MAC users, also automates the
'              file permissions needed to input photos in Microsoft Word.
'----------------------------------------------------------------------------------------------------------------------------------
' Tools: Visual Basic, Visual Basic for Applications (VBA) , Macros
'----------------------------------------------------------------------------------------------------------------------------------
' Notes: If used in the future, simply change the dimension of the tables, the path to the folder(s) containing the pictures, and
'        the strings related to the picture name.
'----------------------------------------------------------------------------------------------------------------------------------

Sub AutomateTable()

'
' The Macro used to automate the creation of each table and populate them.
'

'data types
'
'row is used to track the specific row during each iteration
'
'col is used to track the specifc column during each iteration
'
'iteration is used to track the iteration number in the nested for loop
'
'holdUnitNum is used to hold onto the number cooresponding to the string unit (there are 11 units total, each a directory)
'numRows specifies the number of rows for each table when initializing it
'
'numColumns specifies the number of columns for each table when initializing it
'
'individualPicStr is an array that holds all suffixes that each test shares in common
'
'imageOfTest is the picture to be inserted in each table cell
'
'objShape is used to help rotate imageOfTest, the picture
'
'newTable is the table that stores the photos of the lab results

    Dim row As Integer
    Dim col As Integer
    Dim iteration As Integer
    Dim holdUnitNum As Integer
    Dim numRows As Long
    Dim numColumns As Long
    Dim individualPicStr(16) As String

    Dim imageOfTest As InlineShape
    Dim objShape As Shape
    Dim newTable As Table
    Dim rangeObj As range


'specify the table size (row x col)

    numRows = 59
    numColumns = 3

'specify the suffixes shared in each picture

    individualPicStr(0) = "0.5mA.TIF"
    individualPicStr(1) = "1mA.TIF"
    individualPicStr(2) = "2mA.TIF"
    individualPicStr(3) = "3mA.TIF"
    individualPicStr(4) = "4mA.TIF"
    individualPicStr(5) = "5mA.TIF"
    individualPicStr(6) = "6mA.TIF"
    individualPicStr(7) = "7mA.TIF"
    individualPicStr(8) = "8mA.TIF"
    individualPicStr(9) = "9mA.TIF"
    individualPicStr(10) = "10mA.TIF"
    individualPicStr(11) = "11mA.TIF"
    individualPicStr(12) = "12mA.TIF"
    individualPicStr(13) = "13mA.TIF"
    individualPicStr(14) = "14mA.TIF"
    individualPicStr(15) = "15mA.TIF"
    
'creates empty table, with dimension numRows x numColumns

    Set rangeObj = ActiveDocument.range(0, 0)
    Set newTable = ActiveDocument.Tables.Add(rangeObj, numRows, numColumns)
    
'insert lab results in each cell, all test 3s, 2.7V
   
    iteration = 0

    With newTable

    For row = 1 To 59
    For col = 1 To 3

'finds the corresponding unit number based on the iteration, and uses this number to get the cooresponding unit string (used for path)

    holdUnitNum = getUnitNum(iteration)
    holdUnitStr = getUnitStr(holdUnitNum)
    

'based on the number of pictures, some cells may be inserted with duplicates, this prevents any duplicates

    If iteration = 176 Then
    Exit For
    End If

'labels the picture with a string
  
    .cell(row, col).range.InsertAfter "3." & holdUnitNum & " 2.7V " & individualPicStr(iteration Mod 16)

'initial insert of the picture in the cell

    Set imageOfTest = .cell(row, col).range.InlineShapes.AddPicture("/Users/k3go/Desktop/BackUp37/" & holdUnitStr & "/2.7V/3." & holdUnitNum & " 2.7V " & individualPicStr(iteration Mod 16))

'rotates the picture from vertical to horizontal

    Set objShape = imageOfTest.ConvertToShape
    objShape.IncrementRotation (90)
    Set imageOfTest = objShape.ConvertToInlineShape
      
    iteration = iteration + 1

    Next
    Next

    End With

'since portions of the picture are cut off and overlap, adjust width to reveal the rest; align table to center to fix any cutoffs

    newTable.Columns.Width = 200
    newTable.Rows.Alignment = wdAlignRowCenter

End Sub



Sub GrantAccess()
'
' For MAC users, this macro helps in giving multiple file permissions at once, rather than for each photo
'

'data types
'
'fileAccess is a boolean that helps in giving file permissions
'
'fileCandidates is an array that stores all the picture names that require file permissions
'
'picStr is an array that stores all the picture names
'
'count helps obtain the correct number of pictures
'
'unitNum is number corresponding to the string unit
'
'unitString is the name of the unit

    Dim fileAccess As Boolean
    Dim fileCandidates(176) As String
    Dim picStr(16) As String
    Dim count As Integer
    Dim unitNum As Integer
    Dim unitString As String

    picStr(0) = "0.5mA.TIF"
    picStr(1) = "1mA.TIF"
    picStr(2) = "2mA.TIF"
    picStr(3) = "3mA.TIF"
    picStr(4) = "4mA.TIF"
    picStr(5) = "5mA.TIF"
    picStr(6) = "6mA.TIF"
    picStr(7) = "7mA.TIF"
    picStr(8) = "8mA.TIF"
    picStr(9) = "9mA.TIF"
    picStr(10) = "10mA.TIF"
    picStr(11) = "11mA.TIF"
    picStr(12) = "12mA.TIF"
    picStr(13) = "13mA.TIF"
    picStr(14) = "14mA.TIF"
    picStr(15) = "15mA.TIF"

'obtain all the file names of interest to grant permission in one click

    For count = 1 To 176
        unitNum = getUnitNum(count)
        unitStr = getUnitStr(unitNum)
        fileCandidates(count) = "/Users/k3go/Desktop/BackUp37/" & unitStr & "/2.7V/3." & unitNum & " 2.7V " & picStr(count Mod 16)
    Next
 
'grant access through one click
       
    fileAccess = GrantAccessToMultipleFiles(fileCandidates)

    
End Sub


Function getUnitNum(iteration As Integer) As Integer

'
'function that determines the unit number based on the iteration in subroutine automate table
'param: iteration is the current cycle in the loop used in automate table
'

    
    Dim holdNum As Integer

    If iteration <= 15 Then
    holdNum = 1

    ElseIf iteration <= 31 Then
    holdNum = 2

    ElseIf iteration <= 47 Then
    holdNum = 3

    ElseIf iteration <= 63 Then
    holdNum = 4

    ElseIf iteration <= 79 Then
    holdNum = 5

    ElseIf iteration <= 95 Then
    holdNum = 6

    ElseIf iteration <= 111 Then
    holdNum = 7

    ElseIf iteration <= 127 Then
    holdNum = 8

    ElseIf iteration <= 143 Then
    holdNum = 9

    ElseIf iteration <= 159 Then
    holdNum = 10

    Else
    holdNum = 11

    End If

    getUnitNum = holdNum

End Function

Function getUnitStr(unitNum As Integer) As String

'
'function that determines the unit string based on the iteration in subroutine automate table
'param: unitNum is the unit number that is returned from getUnitNum(iteration)
'

    Dim holdStr As String

    If unitNum = 1 Then
    holdStr = "Unit 1"
    
    ElseIf unitNum = 2 Then
    holdStr = "Unit 2"

    ElseIf unitNum = 3 Then
    holdStr = "Unit 3"
    
    ElseIf unitNum = 4 Then
    holdStr = "Unit 4"
    
    ElseIf unitNum = 5 Then
    holdStr = "Unit 5"

    ElseIf unitNum = 6 Then
    holdStr = "Unit 6"

    ElseIf unitNum = 7 Then
    holdStr = "Unit 7"
    
    ElseIf unitNum = 8 Then
    holdStr = "Unit 8"

    ElseIf unitNum = 9 Then
    holdStr = "Unit 9"
    
    ElseIf unitNum = 10 Then
    holdStr = "Unit 10"

    Else
    holdStr = "Unit 11"

    End If

    getUnitStr = holdStr
   
End Function

